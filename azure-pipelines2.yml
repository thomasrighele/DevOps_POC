# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- release/*

variables:
- group: artifactory_vars
- group: azure_creds
- group: iics_creds


pool:
  name: Default
  demands:
  - agent.name -equals gcnl-blag-rayfg-build


steps:
- task: CmdLine@2
  name: TomTest1
  displayName: Run IICS Utility to Export IICS Package
  inputs:
    script: |
      if [ $(input.Source_Environment) == "DEV" ]; then
        echo "##vso[task.setvariable variable=iicsusername]$(iicscred.Username_DEV)"
        echo "##vso[task.setvariable variable=iicspassword]$(iicscred.Password_DEV)"
        echo "##vso[task.setvariable variable=podHostName]dm-us.informaticacloud.com"
      else
        if [ $(input.Source_Environment) == "PRE" ]; then
          echo "##vso[task.setvariable variable=iicsusername]$(iicscred.Username_PRE)"
          echo "##vso[task.setvariable variable=iicspassword]$(iicscred.Password_PRE)"
          echo "##vso[task.setvariable variable=podHostName]dmr-us.informaticacloud.com"
        else
          if [ $(input.Source_Environment) == "SIT" ]; then
            echo "##vso[task.setvariable variable=iicsusername]$(iicscred.Username_SIT)"
            echo "##vso[task.setvariable variable=iicspassword]$(iicscred.Password_SIT)"
            echo "##vso[task.setvariable variable=podHostName]dm-us.informaticacloud.com"
          else
            if [ $(input.Source_Environment) == "QA" ]; then
              echo "##vso[task.setvariable variable=iicsusername]$(iicscred.Username_QA)"
              echo "##vso[task.setvariable variable=iicspassword]$(iicscred.Password_QA)"
              echo "##vso[task.setvariable variable=podHostName]dm-us.informaticacloud.com"
            else
              if [ $(input.Source_Environment) == "PPD" ]; then 
                echo "##vso[task.setvariable variable=iicsusername]$(iicscred.Username_PPD)"
                echo "##vso[task.setvariable variable=iicspassword]$(iicscred.Password_PPD)"
                echo "##vso[task.setvariable variable=podHostName]dm-us.informaticacloud.com"
              else
                if [ $(input.Source_Environment) == "PROD" ]; then
                  echo "##vso[task.setvariable variable=iicsusername]$(iicscred.Username_PROD)"
                  echo "##vso[task.setvariable variable=iicspassword]$(iicscred.Password_PROD)"
                  echo "##vso[task.setvariable variable=podHostName]dm-us.informaticacloud.com" 
                else
                  echo "Valid environment not selected at Build Runtime"
                  exit 125
                fi
              fi
            fi
          fi
        fi  
      fi
- task: CmdLine@2
  name: TomTest2
  displayName: Run IICS Utility to Export IICS Package
  inputs:
    script: |
       echo $(iicsusername)
       echo $(iicspassword) 


#- task: CmdLine@2
#  name: Export_IICS
#  displayName: Run IICS Utility to Export IICS Package
#  inputs:
#    script: |
#      git clone "https://$(azure_username):$(azure_password)@guycarp.visualstudio.com/GC%20Integration/_git/GC%20Integration"
#        chmod +x "$(System.DefaultWorkingDirectory)/GC%20Integration/IICS Asset Management Utility/iics_linux"
#          if [ $(input.Source_Environment) == "DEV" ]; then
#            "$(System.DefaultWorkingDirectory)/GC%20Integration/IICS Asset Management Utility/iics_linux" export --artifacts "Explore/$(Build.Repository.Name).Project" --name "AzureDevops_Build-$(Build.BuildNumber)" --password "$(iicscred.DEV_Password)" --podHostName "dm-us.informaticacloud.com" --region "us" --username "$(iicscred.DEV_Username)" --zipFilePath "$(Build.ArtifactStagingDirectory)/$(Build.Repository.Name).zip"
#          else 
#          if [ $(input.Source_Environment) == "PRE" ]; then
#            "$(System.DefaultWorkingDirectory)/GC%20Integration/IICS Asset Management Utility/iics_linux" export --artifacts "Explore/$(Build.Repository.Name).Project" --name "AzureDevops_Build-$(Build.BuildNumber)" --password "$(iicscred.PRE_Password)" --podHostName "dmr-us.informaticacloud.com" --region "us" --username "$(iicscred.PRE_Username)" --zipFilePath "$(Build.ArtifactStagingDirectory)/$(Build.Repository.Name).zip"
#            else 
#            if [ $(input.Source_Environment) == "SIT" ]; then
#              "$(System.DefaultWorkingDirectory)/GC%20Integration/IICS Asset Management Utility/iics_linux" export --artifacts "Explore/$(Build.Repository.Name).Project" --name "AzureDevops_Build-$(Build.BuildNumber)" --password "$(iicscred.SIT_Password)" --podHostName "dm-us.informaticacloud.com" --region "us" --username "$(iicscred.SIT_Username)" --zipFilePath "$(Build.ArtifactStagingDirectory)/$(Build.Repository.Name).zip"
#              else 
#              echo "Can only process DEV and SIT Sources right now"
#                exit 125
#              fi
#            fi
#        fi
#        rm -R -f "GC%20Integration"
#- task: Shellpp@0
#  displayName: 'Upload to Artifactory'
#  inputs:
#    type: 'InlineScript'
#    script: |
#      curl -k -u$(artifactory_username):$(artifactory_password) -T $(Build.ArtifactStagingDirectory)/$(Build.Repository.Name).zip "https://$(artifactory_registry)/$(Build.Repository.Name)/Package_$(Build.BuildNumber).zip;Environment=$(input.Source_Environment)"