# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  persistCredentials: true

#- task: CmdLine@2
#  name: Export_IICS
#  displayName: Run IICS Utility an Export into Staging Folder
#  inputs:
#    script: |
#      git clone "https://Thomas.Righele:wsm7mv4mjik3zxjlyarwyvmfbgx6n3wsjxdenit5y5tqrwyjchkq@guycarp.visualstudio.com/GC%20Integration/_git/GC%20Integration"
#         chmod +x "$(System.DefaultWorkingDirectory)/GC%20Integration/IICS Asset Management Utility/iics_linux"
#          "$(System.DefaultWorkingDirectory)/GC%20Integration/IICS Asset Management Utility/iics_linux" export --artifacts "Explore/DevOps_POC.Project" --name "TestTom" --password "nVV89ZvV3aBsw5FT" --podHostName "dm-us.informaticacloud.com" --region "us" --username "Thomas.Righele_dev@guycarp.com" --zipFilePath "$(System.DefaultWorkingDirectory)/DevOps_POC-v1.zip"
#          rm -R -f "GC%20Integration"

#- task: CmdLine@2
#  name: Git_Commands
#  displayName: Run Git to Push to Repo
#  inputs:
#    script: |
#      git checkout $(input.Target_Branch) 2>/dev/null || git checkout -b $(input.Target_Branch)
#          git config --global user.email "thomas.righele@guycarp.com" && git config --global user.name "Thomas.Righele" && git add . && git commit -m "Update Repo"
#          git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push --set-upstream origin $(input.Target_Branch)

- task: CmdLine@2
  name: CMD_Logical
  displayName: Testing Logical operators in Batch
  inputs:
    script: |
      a=10
      b=20

      if [ $a == $b ]
      then
        echo "a is equal to b"
      else
        echo "a is not equal to b"
      fi